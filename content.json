[{"title":"MySQL导入excel与报错指南","date":"2018-02-14T08:48:08.000Z","path":"posts/7ac9323a.html","text":"今天是二月十四，传说中的情人节，在这样一个美好的日子里，不如一起来干一点有意义的事情，比如:在Mac上为MySQL导入excel数据 🌚 基本步骤 创建TABLE使用CREATE TABLE语句:1234CREATE TABLE `tablename`(`id_name` int NOT NULL auto_increment primary key,`content_name` varchar(20) NOT NULL)ENGING=InnoDB DEFAULT CHARSET=utf8;关键元素:tablename 表名id_name content_name 列名int varchar 数据类型primary key 主键可选元素：NOT NULL 不允许NULL值auto_increment 自动匹配可用主键值，仅为主键可选项其他:ENGING 引擎CHARSET 编码，最好是UTF-8创建时应该关注导入数据的数据类型。 导入命令使用load语句:1LOAD DATA INFILE &quot;your excel file path&quot; INTO TABLE [tablename] fields terminated by &apos;\\t&apos;;path 需要绝对路径DATA 后面可以加LOCAL，表示本地客户机文件如果必要，在fields前面加 编码设置character set utf8fields terminated by 表示制表符，视情况而定 建议下面的建议也许帮忙避免一些不必要的麻烦:将xls文件转为TXT或者CSV文件再导入将导入文件储存为UTF8格式注意文件的制表符分割，在选取制表符分割是建议是‘,’ 报错处理乍看语法是很简单的，但是报错很扎心啊QAQ Permission denied1(13,u&apos;at line 1: Cant get stat of `your excel file path`&apos;)读取权限不够，尝试使用LOAD DATA LOCAL INFILE 配置问题1(1290, u&apos;The MySQL server is running with the --secure-file-priv option so it cannot execute this statement&apos;)这是由于数据导入导出操作功能配置出现了问题,输入：1show variables like &apos;%secure%&apos;;然后看到secure-file-prive为NULL的意思是不支持文件导入/出在~目录查找有没有my.cnf,没有的话创建一个,然后在[mysqld]处添加：secure_file_priv=/tmp/mysqldata。将文件放在secure-file-prive路径下，就可以正常导入导出了。这里提供一个小技巧,终端输入：1mysql --help | more找到如： 其中列举的是配置文件的合法路径然后重启MySQL生效1mysql.server restart 配置文件不生效重启后也许会出现：1my_print_defaults: [Warning] World-writable config file '/Users/bitcoin/.my.cnf' is ignored.这里是说配置文件权限太高不安全，系统自动忽略了给🌚，权限改为664即可:1chmod 644 /etc/my.cnf664为该用户可读写，其他用户只可读 编码问题1(1300, u&quot;Invalid utf8 character string: &apos;&apos;&quot;)编码问题有时候确实很头疼，导入MySQL要确保是UTF8格式，然而讲道理只要将excel另存为UTF8格式的TXT后者CSV格式即可。酱，excel终于导入MySQL了🌞，节日快乐么么哒。","content":"<!-- build time:Fri Feb 23 2018 13:02:15 GMT+0800 (CST) --><blockquote><p>今天是二月十四，传说中的情人节，在这样一个美好的日子里，不如一起来干一点有意义的事情，比如:在Mac上为MySQL导入excel数据 🌚</p></blockquote><a id=\"more\"></a><h2 id=\"基本步骤\"><a class=\"markdownIt-Anchor\" href=\"#基本步骤\"></a> <strong>基本步骤</strong></h2><hr><h3 id=\"创建table\"><a class=\"markdownIt-Anchor\" href=\"#创建table\"></a> 创建TABLE</h3><p>使用CREATE TABLE语句:</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `tablename`(</span><br><span class=\"line\">`id_name` int NOT NULL auto_increment primary key,</span><br><span class=\"line\">`content_name` varchar(20) NOT NULL</span><br><span class=\"line\">)ENGING=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><p>关键元素:</p><ul><li>tablename　表名</li><li>id_name content_name 　列名</li><li>int varchar 　数据类型</li><li>primary key 　主键</li></ul><p>可选元素：</p><ul><li>NOT NULL 　不允许NULL值</li><li>auto_increment　自动匹配可用主键值，仅为主键可选项</li></ul><p>其他:</p><ul><li>ENGING　引擎</li><li>CHARSET 编码，最好是UTF-8</li></ul><p>创建时应该关注导入数据的数据类型。</p><h3 id=\"导入命令\"><a class=\"markdownIt-Anchor\" href=\"#导入命令\"></a> 导入命令</h3><p>使用load语句:</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOAD DATA INFILE &quot;your excel file path&quot; INTO TABLE [tablename] fields terminated by &apos;\\t&apos;;</span><br></pre></td></tr></table></figure><ul><li>path　需要绝对路径</li><li>DATA　后面可以加LOCAL，表示本地客户机文件</li><li>如果必要，在fields前面加 编码设置character set utf8</li><li>fields terminated by 　表示制表符，视情况而定</li></ul><h2 id=\"建议\"><a class=\"markdownIt-Anchor\" href=\"#建议\"></a> <strong>建议</strong></h2><hr><p>下面的建议也许帮忙避免一些不必要的麻烦:</p><ul><li>将xls文件转为TXT或者CSV文件再导入</li><li>将导入文件储存为UTF8格式</li><li>注意文件的制表符分割，在选取制表符分割是建议是‘,’</li></ul><h2 id=\"报错处理\"><a class=\"markdownIt-Anchor\" href=\"#报错处理\"></a> <strong>报错处理</strong></h2><hr><p>乍看语法是很简单的，但是报错很扎心啊QAQ</p><h3 id=\"permission-denied\"><a class=\"markdownIt-Anchor\" href=\"#permission-denied\"></a> Permission denied</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(13,u&apos;at line 1: Cant get stat of `your excel file path`&apos;)</span><br></pre></td></tr></table></figure><p>读取权限不够，尝试使用<code>LOAD DATA LOCAL INFILE</code></p><h3 id=\"配置问题\"><a class=\"markdownIt-Anchor\" href=\"#配置问题\"></a> 配置问题</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1290, u&apos;The MySQL server is running with the --secure-file-priv option so it cannot execute this statement&apos;)</span><br></pre></td></tr></table></figure><p>这是由于数据导入导出操作功能配置出现了问题,输入：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show variables like &apos;%secure%&apos;;</span><br></pre></td></tr></table></figure><p>然后看到<br><img src=\"/media/secure.png\" alt=\"secure\"></p><p>secure-file-prive为NULL的意思是不支持文件导入/出<br>在~目录查找有没有my.cnf,没有的话创建一个,然后在[mysqld]处添加：secure_file_priv=/tmp/mysqldata。将文件放在secure-file-prive路径下，就可以正常导入导出了。</p><blockquote><p>这里提供一个小技巧,终端输入：</p></blockquote><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql --help | more</span><br></pre></td></tr></table></figure><blockquote><p>找到如： <img src=\"/media/option.png\" alt=\"option\"></p></blockquote><blockquote><p>其中列举的是配置文件的合法路径</p></blockquote><p>然后重启MySQL生效</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql.server restart</span><br></pre></td></tr></table></figure><h3 id=\"配置文件不生效\"><a class=\"markdownIt-Anchor\" href=\"#配置文件不生效\"></a> 配置文件不生效</h3><p>重启后也许会出现：</p><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my_print_default<span class=\"variable\">s:</span> [Warning] World-writable config <span class=\"keyword\">file</span> <span class=\"string\">'/Users/bitcoin/.my.cnf'</span> <span class=\"keyword\">is</span> ignored.</span><br></pre></td></tr></table></figure><p>这里是说配置文件权限太高不安全，系统自动忽略了给🌚，权限改为664即可:</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 644 /etc/my.cnf</span><br></pre></td></tr></table></figure><p>664为该用户可读写，其他用户只可读</p><h3 id=\"编码问题\"><a class=\"markdownIt-Anchor\" href=\"#编码问题\"></a> 编码问题</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1300, u&quot;Invalid utf8 character string: &apos;&apos;&quot;)</span><br></pre></td></tr></table></figure><p>编码问题有时候确实很头疼，导入MySQL要确保是UTF8格式，然而讲道理只要将excel另存为UTF8格式的TXT后者CSV格式即可。</p><blockquote><p>酱，excel终于导入MySQL了🌞，节日快乐么么哒。</p></blockquote><!-- rebuild by neat -->","updated":"2018-02-22T15:54:17.829Z","permalink":"https://zauruso.coding.me/posts/7ac9323a.html","categories":[{"name":"数据处理","slug":"数据处理","permalink":"https://zauruso.coding.me/categories/数据处理/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://zauruso.coding.me/tags/Mac/"},{"name":"MySQL","slug":"MySQL","permalink":"https://zauruso.coding.me/tags/MySQL/"}]},{"title":"Markdown基本语法与hexo简单操作","date":"2018-02-09T14:14:50.000Z","path":"posts/e8686762.html","text":"一时兴起，用HEXO+GitHub搭建了自己的第一个个人博客，搭建过程俩三个小时，美化了俩三天🌚 。然并卵，并没有好看到那里去。痛定思痛，还是不整这些虚的了，文章才是第一生产力。下面搜罗一些markdown语法和hexo基本用法，以备长期使用。(￣▽￣)~** Markdown的基本语法Markdown 是一种轻量级的「标记语言」,排版美观,可读直观,代码高亮,自动URL链接,插入图片方便,是博客写作排版的首选。 常用命令概要分段: 俩个回车断行: 俩个空格+回车引用: ‘&gt;’ （后面需紧跟个空格）文本间空格:使用&amp;nbsp;,不过很麻烦使用全角模式下的空格，一般为shift+space开启,mac需要设置下 ,推荐这种方法。强调:倾斜:*文字*,_文字_加粗:**文字**,斜体:__文字__加粗倾斜:***文字***,___文字___使用后一种前后需加空格,避免了与下划线混淆代码块:另起一行四个空格或者前后三个` ,就在tab上边。行内代码，`代码`链接: [文字](链接地址)图片: ![图片说明](图片地址)标题: # ~ ######，#号的个数表示几级标题，即表示一级标题到六级标题 具体演示 标题分级12345678910# 文章标题 //一级标题 对应 &lt;h1&gt; &lt;/h1&gt;## 二级标题 //二级标题 对应 &lt;h2&gt; &lt;/h2&gt;### 三级标题 //三级标题 对应 &lt;h3&gt; &lt;/h3&gt;#### 四级标题 //四级标题 对应 &lt;h4&gt; &lt;/h4&gt;##### 五级标题 //五级标题 对应 &lt;h5&gt; &lt;/h5&gt;###### 六级标题 //六级标题 对应 &lt;h6&gt; &lt;/h6&gt;####### 七级标题 //没有效果,但会影响目录行多出一行空行二级标题 //二级标题 对应 &lt;h2&gt; &lt;/h2&gt;---- //这里添加四个'－' （减号）'#'前面不能有空格省略展示 强调12345678910**11** *22* ***33*** or:1 __44__ 11 _55_ 11 ___66___ 11*__77__*1~~88~~显示如下:1122331 44 11 55 11 66 11*77*188 代码块有俩种，一种行首4个空格空格，一种使用 ` 符,后一种支持对应语法高亮，如12345``` python#!/usr/bin/env python# -*- coding: utf-8 -*import this```效果如下123#!/usr/bin/env python# -*- coding: utf-8 -*import this如果希望多重镶嵌,每次在代码外层多输一个 ` ，如1234567``````` python#!/usr/bin/env python# -*- coding: utf-8 -*import this``````` 区块引言&gt;可以生成区块引言,每多一层,加一个&gt;,引言层级不可回溯.例如:1234567&gt;12345&gt;12345&gt;&gt;12345&gt;&gt;&gt;12345 &gt;1 &gt;&gt;&gt;1 &gt;&gt;&gt;&gt;2效果如下:12345123451234512345112引言可以只打一行，用俩个回车标记引言段落结束。 列表* ， + ， - ， 1. 其中之一 + 空格，可以生成列表,如果需要多级,每多一级,前面加一个tab键。列表需要另起一段生效。列表一共有六种标识符号。1234567891011121314151617无序:* abc * abc * abc + abc - abc 有序: 1. abc 1. abc 1. abc 1. abc 1. abc 1. abc 1. abc如下:无序:abcabcabcabcabc有序:abcabcabcabcabcabcabc 表格用-和|分割行和列,表格需要在新段落使用，必须第一行包含表格题目,第二行表格标识如下1234靠右 |靠左 |居中 -:|:-|:-: 1 |2 |3 121212|3232323|1234567效果:靠右靠左居中12312121232323231234567第二行加入冒号的不同位置表示不同对齐方式。 图片![图片名称](图片位置)如下: 在Hexo中的变化简析Hexo 使用的是GFM格式的Markdown,GFM的是Github Flavored Markdown缩写。主要优势有:可以不空俩个换段支持用*号强调,避免和程序代码名混淆代码高亮可以使用``` ，加入语言标识，实现语法高亮。在GFM中写一个URL链接文本，会自动生成URL Hexo 常规操作 博客常规操作 hexo init初始化站点，生成一个简单网站所需的各种文件。 hexo clean清除缓存文件，配置修改时需要使用。 hexo generate == hexo g生效新增、修改、更新的文件hexo generate --watch #监视文件变动 hexo server == hexo s启动本地网站，可在本地观察网站效果 hexo deploy == hexo dhexo的一键部署功能，执行此命令即可将网站发布到配置中的仓库地址。 hexo new [layout] &lt; title &gt;新建一篇文章，layout参数可选，title必填。 hexo new page &lt; title &gt;新建页面 hexo debug用于调试异常 其他 npm install 插件 --save安装hexo所需插件，具体插件可以参考HEXO插件。 主题美化具体参考:打造个性超赞博客Hexo+NexT+GithubPages的超深度优化 改变环境”_config.yml“，“theme/”，“source/&quot;，“scaffolds/”，“package.json”，&quot;.gitignore&quot;是必须拷贝的。具体或其他方法，参考知乎问题:使用hexo，如果换了电脑怎么更新博客？使用hexo的血泪教训是:不要太纠结配置外观使用markdown的血泪教训是:一定要把握好什么地方该敲空格，什么地方不能敲,听上去简单，用了就知道有多坑了🌚。","content":"<!-- build time:Fri Feb 23 2018 13:02:15 GMT+0800 (CST) --><blockquote><p>一时兴起，用HEXO+GitHub搭建了自己的第一个个人博客，搭建过程俩三个小时，美化了俩三天🌚 。然并卵，并没有好看到那里去。痛定思痛，还是不整这些虚的了，文章才是第一生产力。下面搜罗一些markdown语法和hexo基本用法，以备长期使用。(￣▽￣)~**</p></blockquote><a id=\"more\"></a><h2 id=\"markdown的基本语法\"><a class=\"markdownIt-Anchor\" href=\"#markdown的基本语法\"></a> Markdown的基本语法</h2><hr><blockquote><p>Markdown 是一种轻量级的「标记语言」,排版美观,可读直观,代码高亮,自动URL链接,插入图片方便,是博客写作排版的首选。</p></blockquote><h3 id=\"常用命令概要\"><a class=\"markdownIt-Anchor\" href=\"#常用命令概要\"></a> 常用命令概要</h3><ol><li>分段: 俩个回车</li><li>断行: 俩个空格+回车</li><li>引用: ‘&gt;’ （后面需紧跟个空格）</li><li>文本间空格:<ul><li>使用<code>&amp;nbsp;</code>,不过很麻烦</li><li>使用全角模式下的空格，一般为shift+space开启,mac需要<a href=\"http://www.jb51.net/os/MAC/186473.html\" target=\"_blank\" rel=\"noopener\">设置</a>下 ,推荐这种方法。</li></ul></li><li>强调:<ul><li>倾斜:<code>*文字*</code>,<code>_文字_</code></li><li>加粗:<code>**文字**</code>,斜体:<code>__文字__</code></li><li>加粗倾斜:<code>***文字***</code>,<code>___文字___</code></li></ul></li><li>使用后一种前后需加空格,避免了与下划线混淆<ul><li>代码块:另起一行四个空格或者前后三个` ,就在tab上边。</li><li>行内代码，<code>`代码`</code></li></ul></li><li>链接: <code>[文字](链接地址)</code></li><li>图片: <code>![图片说明](图片地址)</code></li><li>标题: # ~ ######，#号的个数表示几级标题，即表示一级标题到六级标题</li></ol><h3 id=\"具体演示\"><a class=\"markdownIt-Anchor\" href=\"#具体演示\"></a> 具体演示</h3><h4 id=\"标题分级\"><a class=\"markdownIt-Anchor\" href=\"#标题分级\"></a> 标题分级</h4><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章标题                      <span class=\"comment\">//一级标题 对应 &lt;h1&gt; &lt;/h1&gt;</span></span><br><span class=\"line\">## 二级标题                     <span class=\"comment\">//二级标题 对应 &lt;h2&gt; &lt;/h2&gt;</span></span><br><span class=\"line\">### 三级标题                    <span class=\"comment\">//三级标题 对应 &lt;h3&gt; &lt;/h3&gt;</span></span><br><span class=\"line\">#### 四级标题                   <span class=\"comment\">//四级标题 对应 &lt;h4&gt; &lt;/h4&gt;</span></span><br><span class=\"line\">##### 五级标题                  <span class=\"comment\">//五级标题 对应 &lt;h5&gt; &lt;/h5&gt;</span></span><br><span class=\"line\">###### 六级标题                 <span class=\"comment\">//六级标题 对应 &lt;h6&gt; &lt;/h6&gt;</span></span><br><span class=\"line\">####### 七级标题                <span class=\"comment\">//没有效果,但会影响目录行多出一行空行</span></span><br><span class=\"line\"></span><br><span class=\"line\">二级标题                        <span class=\"comment\">//二级标题 对应 &lt;h2&gt; &lt;/h2&gt;</span></span><br><span class=\"line\">----                           <span class=\"comment\">//这里添加四个'－' （减号）</span></span><br></pre></td></tr></table></figure><p>'#'前面不能有空格</p><blockquote><p>省略展示</p></blockquote><h4 id=\"强调\"><a class=\"markdownIt-Anchor\" href=\"#强调\"></a> 强调</h4><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"strong\">**11**</span> </span><br><span class=\"line\"><span class=\"emphasis\">*22*</span> </span><br><span class=\"line\"><span class=\"strong\">***33**</span>* </span><br><span class=\"line\">or:</span><br><span class=\"line\">1 <span class=\"strong\">__44__</span> 1</span><br><span class=\"line\">1 <span class=\"emphasis\">_55_</span> 1</span><br><span class=\"line\">1 <span class=\"strong\">___66__</span>_ 1</span><br><span class=\"line\">1<span class=\"strong\">*__77__</span>*1</span><br><span class=\"line\"></span><br><span class=\"line\">~~88~~</span><br></pre></td></tr></table></figure><p>显示如下:</p><blockquote><p><strong>11</strong><br><em>22</em><br><em><strong>33</strong></em><br>1 <strong>44</strong> 1<br>1 <em>55</em> 1<br>1 <em><strong>66</strong></em> 1<br>1*<strong>77</strong>*1<br><s>88</s></p></blockquote><h4 id=\"代码块\"><a class=\"markdownIt-Anchor\" href=\"#代码块\"></a> 代码块</h4><p>有俩种，一种行首4个空格空格，一种使用　`　符,后一种支持对应语法高亮，如</p><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">``` python</span><br><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># -*- coding: utf<span class=\"number\">-8</span> -*</span><br><span class=\"line\"><span class=\"keyword\">import</span> this</span><br><span class=\"line\">```</span><br></pre></td></tr></table></figure><p>效果如下</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> this</span><br></pre></td></tr></table></figure><p>如果希望多重镶嵌,每次在代码外层多输一个　`　，如</p><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">````</span><br><span class=\"line\">``` python</span><br><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># -*- coding: utf<span class=\"number\">-8</span> -*</span><br><span class=\"line\"><span class=\"keyword\">import</span> this</span><br><span class=\"line\">```</span><br><span class=\"line\">````</span><br></pre></td></tr></table></figure><h4 id=\"区块引言\"><a class=\"markdownIt-Anchor\" href=\"#区块引言\"></a> 区块引言</h4><p><code>&gt;</code>可以生成区块引言,每多一层,加一个<code>&gt;</code>,引言层级不可回溯.<br>例如:</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">12345</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">12345</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;12345</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt;12345  </span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">1  </span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt;1  </span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt;&gt;2</span></span><br></pre></td></tr></table></figure><p>效果如下:</p><blockquote><p>12345<br>12345</p><blockquote><p>12345</p><blockquote><p>12345<br>1</p></blockquote><blockquote><p>1</p><blockquote><p>2</p></blockquote></blockquote></blockquote></blockquote><p>引言可以只打一行，用俩个回车标记引言段落结束。</p><h4 id=\"列表\"><a class=\"markdownIt-Anchor\" href=\"#列表\"></a> 列表</h4><p><code>* ， + ， - ， 1.</code> 其中之一 + 空格，可以生成列表,如果需要多级,每多一级,前面加一个tab键。<br>列表需要另起一段生效。列表一共有六种标识符号。</p><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无序:</span><br><span class=\"line\"></span><br><span class=\"line\">* <span class=\"keyword\">abc</span>  </span><br><span class=\"line\">* <span class=\"keyword\">abc</span></span><br><span class=\"line\">    * <span class=\"keyword\">abc</span>  </span><br><span class=\"line\">        + <span class=\"keyword\">abc</span></span><br><span class=\"line\">            - <span class=\"keyword\">abc</span> </span><br><span class=\"line\"></span><br><span class=\"line\">有序: </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>. <span class=\"keyword\">abc</span>  </span><br><span class=\"line\"><span class=\"number\">1</span>. <span class=\"keyword\">abc</span>  </span><br><span class=\"line\">    <span class=\"number\">1</span>. <span class=\"keyword\">abc</span></span><br><span class=\"line\">    <span class=\"number\">1</span>. <span class=\"keyword\">abc</span></span><br><span class=\"line\">    <span class=\"number\">1</span>. <span class=\"keyword\">abc</span></span><br><span class=\"line\">        <span class=\"number\">1</span>. <span class=\"keyword\">abc</span></span><br><span class=\"line\">            <span class=\"number\">1</span>. <span class=\"keyword\">abc</span></span><br></pre></td></tr></table></figure><p>如下:<br>无序:</p><ul><li>abc</li><li>abc<ul><li>abc<ul><li>abc<ul><li>abc</li></ul></li></ul></li></ul></li></ul><p>有序:</p><ol><li>abc</li><li>abc<ol><li>abc</li><li>abc</li><li>abc<ol><li>abc<ol><li>abc</li></ol></li></ol></li></ol></li></ol><h4 id=\"表格\"><a class=\"markdownIt-Anchor\" href=\"#表格\"></a> 表格</h4><p>用-和|分割行和列,表格需要在新段落使用，必须第一行包含表格题目,第二行表格标识<br>如下</p><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">靠右 |<span class=\"string\">靠左 </span>|<span class=\"string\">居中  </span></span><br><span class=\"line\"><span class=\"string\">-:</span>|<span class=\"string\">:-</span>|<span class=\"string\">:-:   </span></span><br><span class=\"line\"><span class=\"string\">1    </span>|<span class=\"string\">2    </span>|<span class=\"string\">3    </span></span><br><span class=\"line\"><span class=\"string\">121212</span>|<span class=\"string\">3232323</span>|1234567</span><br></pre></td></tr></table></figure><p>效果:</p><table><thead><tr><th style=\"text-align:right\">靠右</th><th style=\"text-align:left\">靠左</th><th style=\"text-align:center\">居中</th></tr></thead><tbody><tr><td style=\"text-align:right\">1</td><td style=\"text-align:left\">2</td><td style=\"text-align:center\">3</td></tr><tr><td style=\"text-align:right\">121212</td><td style=\"text-align:left\">3232323</td><td style=\"text-align:center\">1234567</td></tr></tbody></table><p>第二行加入冒号的不同位置表示不同对齐方式。</p><h4 id=\"图片\"><a class=\"markdownIt-Anchor\" href=\"#图片\"></a> 图片</h4><p><code>![图片名称](图片位置)</code><br>如下:</p><p><img src=\"/media/001.jpg\" alt=\"001\"></p><h3 id=\"在hexo中的变化简析\"><a class=\"markdownIt-Anchor\" href=\"#在hexo中的变化简析\"></a> 在Hexo中的变化简析</h3><p>Hexo 使用的是GFM格式的Markdown,GFM的是Github Flavored Markdown缩写。<br>主要优势有:</p><ul><li>可以不空俩个换段</li><li>支持用*号强调,避免和程序代码名混淆</li><li>代码高亮可以使用<code>```</code> ，加入语言标识，实现语法高亮。</li><li>在GFM中写一个URL链接文本，会自动生成URL</li></ul><h2 id=\"hexo-常规操作\"><a class=\"markdownIt-Anchor\" href=\"#hexo-常规操作\"></a> Hexo 常规操作</h2><h3 id=\"博客常规操作\"><a class=\"markdownIt-Anchor\" href=\"#博客常规操作\"></a> 博客常规操作</h3><h4 id=\"hexo-init\"><a class=\"markdownIt-Anchor\" href=\"#hexo-init\"></a> hexo init</h4><p>初始化站点，生成一个简单网站所需的各种文件。</p><h4 id=\"hexo-clean\"><a class=\"markdownIt-Anchor\" href=\"#hexo-clean\"></a> hexo clean</h4><p>清除缓存文件，配置修改时需要使用。</p><h4 id=\"hexo-generate-hexo-g\"><a class=\"markdownIt-Anchor\" href=\"#hexo-generate-hexo-g\"></a> hexo generate == hexo g</h4><p>生效新增、修改、更新的文件<br>hexo generate --watch #监视文件变动</p><h4 id=\"hexo-server-hexo-s\"><a class=\"markdownIt-Anchor\" href=\"#hexo-server-hexo-s\"></a> hexo server == hexo s</h4><p>启动本地网站，可在本地观察网站效果</p><h4 id=\"hexo-deploy-hexo-d\"><a class=\"markdownIt-Anchor\" href=\"#hexo-deploy-hexo-d\"></a> hexo deploy == hexo d</h4><p>hexo的一键部署功能，执行此命令即可将网站发布到配置中的仓库地址。</p><h4 id=\"hexo-new-layout-title\"><a class=\"markdownIt-Anchor\" href=\"#hexo-new-layout-title\"></a> hexo new [layout] &lt; title &gt;</h4><p>新建一篇文章，layout参数可选，title必填。</p><h4 id=\"hexo-new-page-title\"><a class=\"markdownIt-Anchor\" href=\"#hexo-new-page-title\"></a> hexo new page &lt; title &gt;</h4><p>新建页面</p><h4 id=\"hexo-debug\"><a class=\"markdownIt-Anchor\" href=\"#hexo-debug\"></a> hexo debug</h4><p>用于调试异常</p><h3 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\"></a> 其他</h3><h4 id=\"npm-install-插件-save\"><a class=\"markdownIt-Anchor\" href=\"#npm-install-插件-save\"></a> npm install 插件 --save</h4><p>安装hexo所需插件，具体插件可以参考<a href=\"https://hexo.io/plugins/\" target=\"_blank\" rel=\"noopener\">HEXO插件</a>。</p><h4 id=\"主题美化\"><a class=\"markdownIt-Anchor\" href=\"#主题美化\"></a> 主题美化</h4><p>具体参考:<a href=\"https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html\" target=\"_blank\" rel=\"noopener\">打造个性超赞博客Hexo+NexT+GithubPages的超深度优化</a></p><h4 id=\"改变环境\"><a class=\"markdownIt-Anchor\" href=\"#改变环境\"></a> 改变环境</h4><p>”_config.yml“，“theme/”，“source/&quot;，“scaffolds/”，“package.json”，&quot;.gitignore&quot;是必须拷贝的。<br>具体或其他方法，参考知乎问题:<a href=\"https://www.zhihu.com/question/21193762\" target=\"_blank\" rel=\"noopener\">使用hexo，如果换了电脑怎么更新博客？<br></a></p><blockquote><p>使用hexo的血泪教训是:不要太纠结配置外观<br>使用markdown的血泪教训是:一定要把握好什么地方该敲空格，什么地方不能敲,听上去简单，用了就知道有多坑了🌚。</p></blockquote><!-- rebuild by neat -->","updated":"2018-02-22T15:41:03.362Z","permalink":"https://zauruso.coding.me/posts/e8686762.html","categories":[{"name":"博客网页","slug":"博客网页","permalink":"https://zauruso.coding.me/categories/博客网页/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://zauruso.coding.me/tags/Markdown/"},{"name":"hexo","slug":"hexo","permalink":"https://zauruso.coding.me/tags/hexo/"}]},{"title":"MacOSX无法处理pygame键盘事件","date":"2018-02-09T05:39:27.000Z","path":"posts/967984865.html","text":"在使用mac学习GTK+时就发现打开的窗口系统不太灵敏，然而由于没有深入学习，所以并没有理会，然而出来混总是要还的，学习Python做有关pygame的实践时，不管怎么按键盘，窗口上的小飞机死活不动，根本无法检测键盘响应事件。网上换了几种关键词，查了几个英文网站终于找到一个可行的方法，谷歌老爹翻译大法好。下面贴出步骤。 步骤： 第一步确认是否安装xquartz最新版本，不是的话点击安装xquartz。 第二步打开终端控制台，逐行运行下列代码:1234567$ ruby -e $ ( curl -fsSLhttps://raw.githubusercontent.com/Homebrew/install/master/install) $ sudo brew doctor $ brew update $ brew install python3 $ brew install sdl sdl_image sdl_mixer sdl_ttf portmidi mercurial $ brew install libogg libvorbis $ brew install sdl_mixer --with-libvorbis如果出现反馈说’xxx already install’，将’install’换成’reinstall’重新运行 第三步安装Pygame，在终端运行如下代码，其中把’yourname’改为你的用户名，忘记的朋友可以先运行‘ls /Users’查看。12345$ cd /Users/YourName/Downloads $ hg clone https://bitbucket.org/pygame/pygame $ cd pygame $ cd src $ pip3 install /Users/YourName/Downloads/pygame到这里Pygame所需要的环境就整理好了 第四步在终端运行程序的朋友，三步完就可以试试效果了。如果是用的IDE必须把IDE的Python解释器路径换成我们刚刚更新的那个，这里仅介绍Pycharm更改方式，其他的类似。在终端输入1$ which python3记住所得路径。在Pycharm按路径:Pycharm-&gt;Preferences-&gt;Project-&gt;Project Interpreter找到Project Interpreter选项框。点击选项框旁边的齿轮按钮选择‘Add Local’按钮 。点击‘system Interpreter’,在选项框选择刚刚记住路径的Python3(一般系统会自带一个，一定要分清)，或者在旁边的路径里面输入刚刚的路径。完成，等待环境更新完毕即可。看着动起来的飞船不免还是有些小小的激动.网上还有一种方案看上去简洁的多，不过我没有成功，在此贴出来:remove python3 by pyenv$:pyenv uninstall python3remove pyenv$:brew uninstall pyenvreinstall python3 by homebrew$:brew install python3参考：在mac 系统上 pygame 不能获得键盘事件Program Arcade Games With Python And Pygame","content":"<!-- build time:Fri Feb 23 2018 13:02:15 GMT+0800 (CST) --><blockquote><p>在使用mac学习GTK+时就发现打开的窗口系统不太灵敏，然而由于没有深入学习，所以并没有理会，然而出来混总是要还的，学习Python做有关pygame的实践时，不管怎么按键盘，窗口上的小飞机死活不动，根本无法检测键盘响应事件。网上换了几种关键词，查了几个英文网站终于找到一个可行的方法，谷歌老爹翻译大法好。下面贴出步骤。</p></blockquote><a id=\"more\"></a><h3 id=\"步骤\"><a class=\"markdownIt-Anchor\" href=\"#步骤\"></a> 步骤：</h3><h4 id=\"第一步\"><a class=\"markdownIt-Anchor\" href=\"#第一步\"></a> 第一步</h4><ul><li>确认是否安装xquartz最新版本，不是的话点击安装<a href=\"http://xquartz.macosforge.org\" target=\"_blank\" rel=\"noopener\">xquartz</a>。</li></ul><h4 id=\"第二步\"><a class=\"markdownIt-Anchor\" href=\"#第二步\"></a> 第二步</h4><ul><li>打开终端控制台，逐行运行下列代码:</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ruby -e $ ( curl -fsSLhttps://raw.githubusercontent.com/Homebrew/install/master/install)    </span><br><span class=\"line\">$ sudo brew doctor  </span><br><span class=\"line\">$ brew update  </span><br><span class=\"line\">$ brew install python3  </span><br><span class=\"line\">$ brew install sdl sdl_image sdl_mixer sdl_ttf portmidi mercurial  </span><br><span class=\"line\">$ brew install libogg libvorbis  </span><br><span class=\"line\">$ brew install sdl_mixer --with-libvorbis</span><br></pre></td></tr></table></figure><ul><li>如果出现反馈说’xxx already install’，将’install’换成’reinstall’重新运行</li></ul><h4 id=\"第三步\"><a class=\"markdownIt-Anchor\" href=\"#第三步\"></a> 第三步</h4><ul><li>安装Pygame，在终端运行如下代码，其中把’yourname’改为你的用户名，忘记的朋友可以先运行‘ls /Users’查看。</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> /Users/YourName/Downloads  </span><br><span class=\"line\">$ hg <span class=\"built_in\">clone</span> https://bitbucket.org/pygame/pygame  </span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> pygame  </span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> src  </span><br><span class=\"line\">$ pip3 install /Users/YourName/Downloads/pygame</span><br></pre></td></tr></table></figure><ul><li>到这里Pygame所需要的环境就整理好了</li></ul><h4 id=\"第四步\"><a class=\"markdownIt-Anchor\" href=\"#第四步\"></a> 第四步</h4><ul><li>在终端运行程序的朋友，三步完就可以试试效果了。如果是用的IDE必须把IDE的Python解释器路径换成我们刚刚更新的那个，这里仅介绍Pycharm更改方式，其他的类似。</li><li>在终端输入</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">which</span> python3</span><br></pre></td></tr></table></figure><ul><li>记住所得路径。</li><li>在Pycharm按路径:Pycharm-&gt;Preferences-&gt;Project-&gt;Project Interpreter找到Project Interpreter选项框。</li><li>点击选项框旁边的齿轮按钮选择‘Add Local’按钮 。</li><li>点击‘system Interpreter’,在选项框选择刚刚记住路径的Python3(一般系统会自带一个，一定要分清)，或者在旁边的路径里面输入刚刚的路径。</li><li>完成，等待环境更新完毕即可。</li></ul><blockquote><p>看着动起来的飞船不免还是有些小小的激动.<br>网上还有一种方案看上去简洁的多，不过我没有成功，在此贴出来:</p><ol><li>remove python3 by pyenv<br><code>$:pyenv uninstall python3</code></li><li>remove pyenv<br><code>$:brew uninstall pyenv</code></li><li>reinstall python3 by homebrew<br><code>$:brew install python3</code></li></ol></blockquote><p>参考：<br><a href=\"http://bbs.fishc.com/thread-95321-1-1.html\" target=\"_blank\" rel=\"noopener\">在mac 系统上 pygame 不能获得键盘事件</a><br><a href=\"http://programarcadegames.com/index.php?chapter=foreword&amp;lang=cn#section_0\" target=\"_blank\" rel=\"noopener\">Program Arcade Games With Python And Pygame</a></p><!-- rebuild by neat -->","updated":"2018-02-20T17:13:49.340Z","permalink":"https://zauruso.coding.me/posts/967984865.html","categories":[{"name":"报错指南","slug":"报错指南","permalink":"https://zauruso.coding.me/categories/报错指南/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://zauruso.coding.me/tags/Mac/"}]}]